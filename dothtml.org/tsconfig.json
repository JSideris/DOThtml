{
	"compilerOptions": {
		/* Basic Options */
		"target": "ESNEXT",						/* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
		"module": "ESNext",						/* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
		"allowJs": false,						/* Allow javascript files to be compiled. */
		"declaration": true,					/* Generates corresponding '.d.ts' file. */
		"sourceMap": true,						/* Generates corresponding '.map' file. */
		// "outFile": "./tsout/dot.js",			/* Concatenate and emit output to single file. */
		"outDir": "./build_module",						/* Redirect output structure to the directory. */
		"rootDir": "./src",						/* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
		// "composite": true,					/* Enable project compilation */
		"removeComments": true,					/* Do not emit comments to output. */

		/* Strict Type-Checking Options */
		"noImplicitAny": false,					/* Raise error on expressions and declarations with an implied 'any' type. */
		"strictPropertyInitialization": false,	/* Enable strict checking of property initialization in classes. */
		// "noImplicitThis": true,				/* Raise error on 'this' expressions with an implied 'any' type. */
		// "alwaysStrict": true,				/* Parse in strict mode and emit "use strict" for each source file. */
		
		/* Module Resolution Options */
		// "types": ["./lib/dothtml.d.ts"],		/* Type declaration files to be included in compilation. */
		"moduleResolution": "node",				/* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
		// "paths": {},							/* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
		// "rootDirs": [],						/* List of root folders whose combined content represents the structure of the project at runtime. */
		// "typeRoots": [],						/* List of folders to include type definitions from. */
		// "allowSyntheticDefaultImports": true,/* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
		"esModuleInterop": true,				/* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
		// "preserveSymlinks": true,			/* Do not resolve the real path of symlinks. */
		// "allowUmdGlobalAccess": true,		/* Allow accessing UMD globals from modules. */

		/* Source Map Options */
		// "sourceRoot": "",					/* Specify the location where debugger should locate TypeScript files instead of source locations. */
		// "mapRoot": "",						/* Specify the location where debugger should locate map files instead of generated locations. */
		// "inlineSourceMap": true,				/* Emit a single file with source maps instead of having a separate file. */
		// "inlineSources": true,				/* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

		/* Experimental Options */
		"experimentalDecorators": true,			/* Enables experimental support for ES7 decorators. */
		"emitDecoratorMetadata": true,			/* Enables experimental support for emitting type metadata for decorators. */

		/* Advanced Options */
		// "forceConsistentCasingInFileNames": true,/* Disallow inconsistently-cased references to the same file. */
		// "baseUrl": "./src", /* Don't use this. Base directory to resolve non-absolute module names. */
		// "paths": {
		//	 "*": ["../../../src/"], // This mapping is relative to "baseUrl"
		// },
		"useDefineForClassFields": false, // Important. Without this default values of undefined are auto-assigned after the factory setter.
	},

	"include": [
		"src/**/*"
	],
}